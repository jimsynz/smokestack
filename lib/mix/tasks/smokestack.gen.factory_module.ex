defmodule Mix.Tasks.Smokestack.Gen.FactoryModule do
  @moduledoc """
  Generate a starting factory module.

  ## Example

  ```bash
  mix smokestack.gen.factory_module factory_module
  ```

  ## Options

  * `--ignore-if-exists` - Do nothing if the module file already exists.
  """

  @shortdoc "Generate a starting factory module"
  use Igniter.Mix.Task

  @doc false
  @impl Igniter.Mix.Task
  def info(_argv, _parent) do
    %Igniter.Mix.Task.Info{
      schema: [
        ignore_if_exists: :boolean
      ]
    }
  end

  def igniter(igniter, [factory_module | argv]) do
    factory = Igniter.Code.Module.parse(factory_module)
    factory_file = Igniter.Code.Module.proper_test_support_location(factory)

    options = options!(argv)

    if options[:ignore_if_exists] && Igniter.exists?(igniter, factory_file) do
      igniter
    else
      Igniter.create_new_elixir_file(igniter, factory_file, ~s'''
      defmodule #{inspect(factory)} do
        @moduledoc """
        Test factories generated by Smokestack.

        In this file you can define factories for your Ash resources which can be
        used in your tests.

        As well as defining your factories, this module will contain automatic
        implementations of the `c:Smokestack.insert/2`, `c:Smokestack.insert!/2`,
        `c:Smokestack.params/2` and `c:Smokestack.params!/2` callbacks.

        See https://hexdocs.pm/smokestack/ for more information.
        """
        use Smokestack

        # Define your factories here:
        #
        # factory MyResource do
        #   attribute :name, constant("Marty McFly")
        # end
      end
      ''')
    end
  end
end
